<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小通</title>
  
  <subtitle>你终究会成为你正在成为的人，你的每一个选择都是来自你人生意义的诘问。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://howsyc.cn/"/>
  <updated>2020-04-26T20:37:00.486Z</updated>
  <id>https://howsyc.cn/</id>
  
  <author>
    <name>小通</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>本站换域名啦(公告)</title>
    <link href="https://howsyc.cn/2020/04/27/howsyc/"/>
    <id>https://howsyc.cn/2020/04/27/howsyc/</id>
    <published>2020-04-26T20:33:11.000Z</published>
    <updated>2020-04-26T20:37:00.486Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Apr 27 2020 04:37:09 GMT+0800 (GMT+08:00) --><p>本站已换成howsyc.cn的新域名,how=好，syc=四叶草,象征着幸运,总得来说=好幸运。就是进入本站的朋友们都会被幸运女神保佑，气运十足，如果是学生考试加分等，如果是工作者一切顺利，早日涨薪，如果…..emmm编不下去了(滑稽)。祝每一位来到本站的朋友幸福快乐！旧域名mykindle.xyz点击后会自动跳转到新域名,换域名是因为听说小姨子后缀百度收录不太好，所以就直接换了,菜鸡小站希望以后有点收录，感谢来访的朋友们，呜呜呜底部的底部的访客数清空了。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Apr 27 2020 04:37:09 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;本站已换成howsyc.cn的新域名,how=好，syc=四叶草,象征着幸运,总得来说=好幸运。就是进入本站的朋友们都会被幸运女神保佑，气运十足
      
    
    </summary>
    
    
    
      <category term="博客" scheme="https://howsyc.cn/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>cos对象存储拒绝访问解决方法（腾讯云）</title>
    <link href="https://howsyc.cn/2020/04/25/cosnew/"/>
    <id>https://howsyc.cn/2020/04/25/cosnew/</id>
    <published>2020-04-25T10:30:48.000Z</published>
    <updated>2020-04-25T11:00:09.225Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Apr 27 2020 04:30:07 GMT+0800 (GMT+08:00) --><p>昨天一直在图床的测试，然后访问的时候一直提示Access Denied，emmm我太菜了。当时因为我看不懂英HHHHH。直接百度了.cors跨域访问也设置了,访问权限公有读也设置了,为什么还不能访问呢？</p><a id="more"></a><p><img src="https://kaifan-1301263664.cos.ap-nanjing.myqcloud.com/cos%E5%AF%B9%E8%B1%A1%E8%AE%BF%E9%97%AE/Cache_-724e899b7d8e5fa2..jpg" alt="Images text"><br><img src="https://kaifan-1301263664.cos.ap-nanjing.myqcloud.com/cos%E5%AF%B9%E8%B1%A1%E8%AE%BF%E9%97%AE/Cache_-7c3e6ea07bcce2db..jpg" alt="Images text"><br><img src="https://kaifan-1301263664.cos.ap-nanjing.myqcloud.com/cos%E5%AF%B9%E8%B1%A1%E8%AE%BF%E9%97%AE/cors.PNG" alt="images text"></p><p>经过广大的网友大佬们的帮助找到了问题1如果你没有在基础配置里设置防盗链,或者权限里面设置Policy权限,访问对象链接就会报错Access Denied,没有权限。设置方法可以官网给的提示。<br><img src="https://kaifan-1301263664.cos.ap-nanjing.myqcloud.com/cos%E5%AF%B9%E8%B1%A1%E8%AE%BF%E9%97%AE/%E5%AF%B9%E8%B1%A1%E6%9D%83%E9%99%90.jpg" alt="image text"><br><img src="https://kaifan-1301263664.cos.ap-nanjing.myqcloud.com/cos%E5%AF%B9%E8%B1%A1%E8%AE%BF%E9%97%AE/%E6%9D%83%E9%99%90.jpg" alt="image text"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Apr 27 2020 04:30:07 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;昨天一直在图床的测试，然后访问的时候一直提示Access Denied，emmm我太菜了。当时因为我看不懂英HHHHH。直接百度了.cors跨域访问也设置了,访问权限公有读也设置了,为什么还不能访问呢？&lt;/p&gt;
    
    </summary>
    
    
      <category term="博客" scheme="https://howsyc.cn/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="cos" scheme="https://howsyc.cn/tags/cos/"/>
    
  </entry>
  
  <entry>
    <title>标识符</title>
    <link href="https://howsyc.cn/2020/04/24/%E6%A0%87%E8%AF%86%E7%AC%A6/"/>
    <id>https://howsyc.cn/2020/04/24/%E6%A0%87%E8%AF%86%E7%AC%A6/</id>
    <published>2020-04-23T16:55:43.926Z</published>
    <updated>2020-04-23T16:55:44.121Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Apr 27 2020 04:30:07 GMT+0800 (GMT+08:00) --><p>java标识符的命名规范<br><a href="https://www.sxt.cn/Java_jQuery_in_action/Java_Identifier.html" target="_blank" rel="noopener">原文来源</a></p><a id="more"></a><h3 id="变量和常量命名规范"><a href="#变量和常量命名规范" class="headerlink" title="变量和常量命名规范"></a>变量和常量命名规范</h3><p>（规范是程序员的基本准则,不规范会直接损害你的个人形象）<br>所有变量、方法、类名：见名知意<br>类成员变量：首字母小写和驼峰原则（monthSalary）<br>局部变量：首字母小写和驼峰原则<br>常量：大写字母和下划线:MAX_VALUE<br>类名：首字母大写和驼峰原则（Man,GoodMan）<br>方法名：首字母小写和驼峰原则:run(),runRun()<br>//变量本质上就是代表一个“可操作的存储空间”，空间位置是确定的，但是里面放置什么值不确定。我们可通过变量名来访问“对应的存储空间”，<br>//从而操纵这个“存储空间”存储的值。<br>//java是一种强制 型语言，每个变量都必须声明其书局类型。变量的数据类型决定了变量占据存储空间的大小。比如 int a = 3; 表示a变量的空间大小为4个字节</p><h3 id="标识符的命名规则："><a href="#标识符的命名规则：" class="headerlink" title="标识符的命名规则："></a>标识符的命名规则：</h3><p>标识符必须以字母、下划线_、美元符号$开头。<br>标识符其它部分可以是字母、下划线“_”、美元符“$”和数字的任意组合。<br>Java 标识符大小写敏感，且长度无限制。<br>标识符不可以是Java的关键字。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Apr 27 2020 04:30:07 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;java标识符的命名规范&lt;br&gt;&lt;a href=&quot;https://www.sxt.cn/Java_jQuery_in_action/Java_Identifier.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原文来源&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="https://howsyc.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://howsyc.cn/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>java运算符的优先级</title>
    <link href="https://howsyc.cn/2020/04/24/java%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <id>https://howsyc.cn/2020/04/24/java%E8%BF%90%E7%AE%97%E7%AC%A6/</id>
    <published>2020-04-23T16:55:43.921Z</published>
    <updated>2020-04-23T16:55:44.127Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Apr 27 2020 04:30:07 GMT+0800 (GMT+08:00) --><p>java运算符的优先级</p><a id="more"></a><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">优先级运算符类结合性</span><br><span class="line">1()括号运算符由左至右</span><br><span class="line">2!、+（正号）、-（负号）一元运算符由左至右</span><br><span class="line">2~位逻辑运算符由右至左</span><br><span class="line">2++、--递增与递减运算符由右至左</span><br><span class="line">3*、/、%算术运算符由左至右</span><br><span class="line">4+、-算术运算符由左至右</span><br><span class="line">5&lt;&lt;、&gt;&gt;位左移、右移运算符由左至右</span><br><span class="line">6&gt;、&gt;=、&lt;、&lt;=关系运算符由左至右</span><br><span class="line">7==、!=关系运算符由左至右</span><br><span class="line">8&amp;位运算符、逻辑运算符由左至右</span><br><span class="line">9^位运算符、逻辑运算符由左至右</span><br><span class="line">10|位运算符、逻辑运算符由左至右</span><br><span class="line">11&amp;&amp;逻辑运算符由左至右</span><br><span class="line">12||逻辑运算符由左至右</span><br><span class="line">13</span><br><span class="line">? :条件运算符由右至左</span><br><span class="line">14=、+=、-=、*=、/=、%=赋值运算符、扩展运算符由右至左</span><br></pre></td></tr></table></figure><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">运算符说明</span><br><span class="line">逻辑与&amp;( 与)两个操作数为<span class="literal">true</span>，结果才是<span class="literal">true</span>，否则是<span class="literal">false</span></span><br><span class="line">逻辑或|(或)两个操作数有一个是<span class="literal">true</span>，结果就是<span class="literal">true</span></span><br><span class="line">短路与&amp;&amp;( 与)只要有一个为<span class="literal">false</span>，则直接返回<span class="literal">false</span></span><br><span class="line">短路或||(或)只要有一个为<span class="literal">true</span>， 则直接返回<span class="literal">true</span></span><br><span class="line">逻辑非!（非）取反：!<span class="literal">false</span>为<span class="literal">true</span>，!<span class="literal">true</span>为<span class="literal">false</span></span><br><span class="line">逻辑异或^（异或）相同为<span class="literal">false</span>，不同为<span class="literal">true</span></span><br><span class="line">Integer.toBinaryString         一个整数的二进制表达</span><br><span class="line">&lt;&lt;左移</span><br><span class="line">&gt;&gt;右移</span><br><span class="line">&gt;&gt;&gt;                         带符号右移与无符号右移</span><br></pre></td></tr></table></figure><h3 id="条件运算符"><a href="#条件运算符" class="headerlink" title="条件运算符"></a>条件运算符</h3><p>语法格式：<br>1 x ? y : z<br>其中 x 为 boolean 类型表达式，先计算 x 的值，若为true，则整个运算的结果为表达式 y 的值，否则整个运算结果为表达式 z 的值。</p><h3 id="带符号右移-gt-gt"><a href="#带符号右移-gt-gt" class="headerlink" title="带符号右移 &gt;&gt;"></a>带符号右移 &gt;&gt;</h3><p>对于正数， 带符号右移 &gt;&gt; 会把所有的位右移，并在最前面补0<br>对于负数， 带符号右移 &gt;&gt; 会把所有的位右移，并在最前面补1</p><h3 id="无符号右移-gt-gt-gt"><a href="#无符号右移-gt-gt-gt" class="headerlink" title="无符号右移&gt;&gt;&gt;"></a>无符号右移&gt;&gt;&gt;</h3><p>如果是一个负数，那么对应的二进制的第一位是1<br>无符号右移&gt;&gt;&gt;会把第一位的1也向右移动，导致移动后，第一位变成0<br>这样就会使得负数在无符号右移后，得到一个正数</p><h3 id="自增-自减"><a href="#自增-自减" class="headerlink" title="自增 自减"></a>自增 自减</h3><p>++ –<br>i++ 先赋值再自增<br>++i先自增再赋值</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Apr 27 2020 04:30:07 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;java运算符的优先级&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="https://howsyc.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://howsyc.cn/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>java数组</title>
    <link href="https://howsyc.cn/2020/04/24/java%E6%95%B0%E7%BB%84%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://howsyc.cn/2020/04/24/java%E6%95%B0%E7%BB%84%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2020-04-23T16:55:43.919Z</published>
    <updated>2020-04-23T16:55:44.116Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Apr 27 2020 04:30:07 GMT+0800 (GMT+08:00) --><p>数组，以及Arrays.方法的使用</p><a id="more"></a><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="创建数组的时候，要指明数组的长度。"><a href="#创建数组的时候，要指明数组的长度。" class="headerlink" title="创建数组的时候，要指明数组的长度。"></a>创建数组的时候，要指明数组的长度。</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">int a [ ] = new int[5] ; //分配了长度是5的数组，但是没有赋值</span><br><span class="line">a[4]=100; //下标4，实质上是“第5个”，即最后一个</span><br><span class="line">a[5]=101; //下标5，实质上是“第6个”，超出范围 ,产生数组下标越界异</span><br><span class="line"></span><br><span class="line">int[] a = new int[]&#123;100,102,444,836,3236&#125;;//写法一: 分配空间同时赋值</span><br><span class="line">int[] b = &#123;100,102,444,836,3236&#125;;//写法二： 省略了new int[],效果一样</span><br><span class="line"></span><br><span class="line">//写法三：同时分配空间，和指定内容</span><br><span class="line">//在这个例子里，长度是3，内容是5个，产生矛盾了</span><br><span class="line">//所以如果指定了数组的内容，就不能同时设置数组的长度</span><br><span class="line"> int[] c = new int[3]&#123;100,102,444,836,3236&#125;;</span><br></pre></td></tr></table></figure><h3 id="引用概念："><a href="#引用概念：" class="headerlink" title="引用概念："></a>引用概念：</h3><p>如果变量代表一个数组，比如a,我们把a叫做引用<br>与基本类型不同</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">int c &#x3D; 5; 这叫给c赋值为5 </span><br><span class="line">声明一个引用 int[] a; </span><br><span class="line">a &#x3D; new int[5]; </span><br><span class="line">让a这个引用，指向数组</span><br><span class="line">常</span><br></pre></td></tr></table></figure><h3 id="数组排序"><a href="#数组排序" class="headerlink" title="数组排序"></a>数组排序</h3><p>选择法排序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">for (int j &#x3D; 0; j &lt; a.length-1; j++) &#123;&#x2F;&#x2F;外层循环一次，</span><br><span class="line">因为最后一次剩下的就是最大的所以循环次数-1</span><br><span class="line">  for (int i &#x3D; j+1; i &lt; a.length; i++) &#123;&#x2F;&#x2F;内层会全部循环一次</span><br><span class="line">    if(a[i]&lt;a[j])&#123; &#x2F;&#x2F;如果然后的数小于前面的就换位 </span><br><span class="line">      int temp &#x3D; a[j];</span><br><span class="line">     a[j] &#x3D; a[i];</span><br><span class="line">     a[i] &#x3D; temp;</span><br><span class="line">            &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>冒泡法排序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">for (int j &#x3D; 0; j &lt; a.length; j++) &#123;&#x2F;&#x2F;</span><br><span class="line">  for (int i &#x3D; 0; i &lt; a.length-j-1; i++) &#123;&#x2F;&#x2F;-1防止数组下标越界</span><br><span class="line">&#x2F;&#x2F;-j是因为每内循环一次，最大的就放在后面了，就不需要比较了</span><br><span class="line">    if(a[i]&gt;a[i+1])&#123; &#x2F;&#x2F;如果前面的大于后面的就互换 </span><br><span class="line">     int temp &#x3D; a[i];</span><br><span class="line">     a[i] &#x3D; a[i+1];</span><br><span class="line">     a[i+1] &#x3D; temp;</span><br><span class="line">              &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="增强型for循环遍历"><a href="#增强型for循环遍历" class="headerlink" title="增强型for循环遍历"></a>增强型for循环遍历</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int [] values &#x3D; new int[];</span><br><span class="line">for (int each : values) &#123;</span><br><span class="line">   System.out.println(each);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="复制数组："><a href="#复制数组：" class="headerlink" title="复制数组："></a>复制数组：</h3><p>把一个数组的值，复制到另一个数组中<br>System.arraycopy(src, srcPos, dest, destPos, length)<br>src: 源数组<br>srcPos: 从源数组复制数据的起始位置<br>dest: 目标数组<br>destPos: 复制到目标数组的起始位置<br>length: 复制的长度</p><p>这是一个二维数组，里面的每一个元素，都是一个一维数组<br>所以二维数组又叫数组的数组<br>int b[][] = new int[][]{<br>{1,2,3},<br>{4,5,6},<br>{7,8,9}<br>};</p><h2 id="Arrays"><a href="#Arrays" class="headerlink" title="Arrays"></a>Arrays</h2><p>Arrays是针对数组的工具类，可以进行 排序，查找，复制填充等功能。 大大提高了开发人员的工作效率。</p><h3 id="copyOfRange-数组复制"><a href="#copyOfRange-数组复制" class="headerlink" title="copyOfRange    数组复制"></a>copyOfRange 数组复制</h3><p>与使用System.arraycopy进行数组复制类似的，Arrays提供了一个copyOfRange方法进行数组复制。<br>// copyOfRange(int[] original, int from, int to)<br>// 第一个参数表示源数组<br>// 第二个参数表示开始位置(取得到)<br>// 第三个参数表示结束位置(取不到)</p><h3 id="toString-转换为字符串"><a href="#toString-转换为字符串" class="headerlink" title="toString()    转换为字符串"></a>toString() 转换为字符串</h3><p>//int a[] = new int[] { 18, 62, 68, 82, 65, 9 };<br>//String content = Arrays.toString(a);<br>sort 排序<br>在前面章节学习了 选择法排序 和 冒泡法排序，Arrays工具类提供了一个sort方法，只需要一行代码即可完成排序功能。</p><h3 id="Arrays-sort-a"><a href="#Arrays-sort-a" class="headerlink" title="Arrays.sort(a);"></a>Arrays.sort(a);</h3><p>binarySearch 搜索<br>//使用binarySearch之前，必须先使用sort进行排序<br>//如果数组中有多个相同的元素，查找的结果是不确定的<br>int a[] = new int[] { 18, 62, 68, 82, 65, 9 };<br>Arrays.sort(a);<br>System.out.println(“数字 62出现的位置:”+Arrays.binarySearch(a, 62));</p><h3 id="equals-判断是否相同"><a href="#equals-判断是否相同" class="headerlink" title="equals    判断是否相同"></a>equals 判断是否相同</h3><p>//比较两个数组的内容是否一样<br>System.out.println(Arrays.equals(a, b));</p><h3 id="fill-填充"><a href="#fill-填充" class="headerlink" title="fill    填充"></a>fill 填充</h3><p>//使用同一个值，填充整个数组<br>int a[] = new int[10];<br>Arrays.fill(a, 5);</p><h3 id="练习题"><a href="#练习题" class="headerlink" title="练习题"></a>练习题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">import java.util.Arrays;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line"> * 练习-二维数组排序</span><br><span class="line"> * 首先定义一个5*8的二维数组，然后使用随机数填充满</span><br><span class="line"> * 借助Arrays的方法对二维数组进行排序</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class Exercise_TwoDimensionSort &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">int a[][] &#x3D; new int[5][8];</span><br><span class="line">int []b &#x3D; new int [40];&#x2F;&#x2F;这里必须赋值</span><br><span class="line">&#x2F;&#x2F;int b &#x3D; (int)(Math.random()*100);</span><br><span class="line">&#x2F;&#x2F;Arrays.fill(a, b);  二维不能填充；</span><br><span class="line">System.out.println(&quot;排序前：&quot;);</span><br><span class="line">for (int i &#x3D; 0; i &lt;5; i++) &#123;</span><br><span class="line">for (int j &#x3D; 0; j &lt;8; j++) &#123;</span><br><span class="line">a[i][j] &#x3D;(int)(Math.random()*100);&#x2F;&#x2F;给二维数组赋值；</span><br><span class="line">System.out.print(+a[i][j]+&quot;\t&quot;);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line">for (int i &#x3D; 0; i &lt;5; i++) &#123;</span><br><span class="line"></span><br><span class="line">System.arraycopy(a[i], 0, b, i*8, a[i].length);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">Arrays.sort(b);</span><br><span class="line">System.out.println(&quot;排序后：&quot;+Arrays.toString(b));</span><br><span class="line">for (int i &#x3D; 0; i &lt; 5; i++) &#123;</span><br><span class="line">System.arraycopy(b, i*8, a[i],0,8);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;新的二维数组：&quot;);</span><br><span class="line">for (int i &#x3D; 0; i &lt;5; i++) &#123;</span><br><span class="line">for (int j &#x3D; 0; j &lt; 8; j++) &#123;</span><br><span class="line">System.out.print(a[i][j]+&quot;\t&quot;);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://how2j.cn/p/5505" target="_blank" rel="noopener">原文来源</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Apr 27 2020 04:30:07 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;数组，以及Arrays.方法的使用&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="https://howsyc.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://howsyc.cn/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>java数据类型</title>
    <link href="https://howsyc.cn/2020/04/24/java%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>https://howsyc.cn/2020/04/24/java%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</id>
    <published>2020-04-23T16:55:43.916Z</published>
    <updated>2020-04-23T16:55:44.111Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Apr 27 2020 04:30:07 GMT+0800 (GMT+08:00) --><p>java的数据类型可分为两大类：<br>基本数据类型（primitive data type）和引用数据类型（referece data type)</p><a id="more"></a><h3 id="基本数据类型（primitive-data-type）："><a href="#基本数据类型（primitive-data-type）：" class="headerlink" title="基本数据类型（primitive data type）："></a>基本数据类型（primitive data type）：</h3><p>-整数类型（byte short int long）<br>型(java语言的整型常数默认为int型，声明long型常量可以后加 ‘l’或’L’)<br>浮点类型(float double)<br>字符型（char）<br>布尔型(boolean)</p><h3 id="引用数据类型"><a href="#引用数据类型" class="headerlink" title="引用数据类型"></a>引用数据类型</h3><p>类（class）(String是引用类型)<br>接口(interface)<br>数组</p><p>$ //引用数据类型的大小统一为4个字节,记录的是其引用对象的地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">类型占用存储空间                            表示范围</span><br><span class="line">byte1字节（=8位=2⑻=256字）-2⑺~2⑺-1（-128~127)</span><br><span class="line">short2字节-2⒂~2⒂-1(-32768~32767)</span><br><span class="line">int4字节-2*(31幂)~2*(31幂)（-2127283648~2147483647）（约21亿）</span><br><span class="line">long8字节-2*(63)~2*(63)-1</span><br><span class="line">char2字节</span><br><span class="line">boolean1位</span><br><span class="line"><span class="built_in">float</span>4字节</span><br><span class="line">double8字节</span><br></pre></td></tr></table></figure><p>基本数据类型的类型转换可分为：<br>自动类型转换：容量小的数据类型可以自动转换为容量大的数据类型<br>强制类型转换：用于显式的转换一个数值的类型，语法格式：(type)var</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Apr 27 2020 04:30:07 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;java的数据类型可分为两大类：&lt;br&gt;基本数据类型（primitive data type）和引用数据类型（referece data type)&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="https://howsyc.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://howsyc.cn/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>控制语句</title>
    <link href="https://howsyc.cn/2020/04/24/java%E6%8E%A7%E5%88%B6%E6%B5%81%E7%A8%8B/"/>
    <id>https://howsyc.cn/2020/04/24/java%E6%8E%A7%E5%88%B6%E6%B5%81%E7%A8%8B/</id>
    <published>2020-04-23T16:55:43.914Z</published>
    <updated>2020-04-23T16:55:44.106Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Apr 27 2020 04:30:07 GMT+0800 (GMT+08:00) --><p>控制语句在基础中还是比较重要，还带那么一点有趣</p><a id="more"></a><h2 id="控制语句"><a href="#控制语句" class="headerlink" title="控制语句"></a>控制语句</h2><h3 id="选择结构："><a href="#选择结构：" class="headerlink" title="选择结构："></a>选择结构：</h3><p>if单选泽结构<br>if-else 双选择结构<br>if-else if - else多选择结构<br>switch结构</p><h3 id="循环结构："><a href="#循环结构：" class="headerlink" title="循环结构："></a>循环结构：</h3><p>while循环<br>do-while循环（先执行再判断，为true继续执行，否则停止）<br>for循环（初始化声明的变量作用域为整个for循环体内，在循环体外无法访问）<br>嵌套循环（ 在一个循环语句内部再嵌套一个或多个循环，称为嵌套循环。<br>while、do-while与for循环可以任意嵌套多层。）<br>break和continue语句<br>带标签的break和continue</p><h3 id="下面是几个控制语句的例题"><a href="#下面是几个控制语句的例题" class="headerlink" title="下面是几个控制语句的例题"></a>下面是几个控制语句的例题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">* 复利公式：</span><br><span class="line">F = p* ( (1+r)^n );</span><br><span class="line">F 最终收入 p 本金 r 年利率 n 存了多少年</span><br><span class="line"> */</span><br><span class="line">public class Millionaire &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">int p = 1000,n;</span><br><span class="line"><span class="built_in">float</span> r = 0.2F;</span><br><span class="line">int F=0  ;</span><br><span class="line"><span class="keyword">for</span> (int i = 0; F&lt;=100000; i++) &#123;</span><br><span class="line">F=(int) (p*((r/12)+1));</span><br><span class="line">p+=1000;</span><br><span class="line"><span class="keyword">if</span> (F&gt;=100000) &#123;</span><br><span class="line">n=i/12;</span><br><span class="line">System.out.println(n);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">* 黄金分割点：</span><br><span class="line"> * 寻找某两个数相除，其结果 离黄金分割点 0.618最近</span><br><span class="line">分母和分子不能同时为偶数</span><br><span class="line">分母和分子 取值范围在[1-20]</span><br><span class="line"> */</span><br><span class="line">public class GoldSenectionRatio &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">// 寻找某两个数相除，其结果 离黄金分割点 0.618最近</span><br><span class="line">        //</span><br><span class="line">        // 分母和分子不能同时为偶数</span><br><span class="line">        // 分母和分子 取值范围在[1-20]</span><br><span class="line">        int range = 20; // 取值范围</span><br><span class="line">        <span class="built_in">float</span> breakPoint = 0.618f; // 黄金分割点</span><br><span class="line"> </span><br><span class="line">        <span class="built_in">float</span> minDiff = 100; // 离黄金分割点的差值</span><br><span class="line">        int answerFenzi = 0; // 找到的分子</span><br><span class="line">        int answerFenmu = 0; // 找到的分母</span><br><span class="line">        <span class="keyword">for</span> (int fenzi = 1; fenzi &lt;= range; fenzi++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (int fenmu = 1; fenmu &lt;= range; fenmu++) &#123;</span><br><span class="line">                // 分母和分子不能同时为偶数</span><br><span class="line">                <span class="keyword">if</span> (0 == fenzi % 2 &amp; 0 == fenmu % 2)</span><br><span class="line">                    <span class="built_in">continue</span>;</span><br><span class="line"> </span><br><span class="line">                // 取值</span><br><span class="line">                <span class="built_in">float</span> value = (<span class="built_in">float</span>) fenzi / fenmu;</span><br><span class="line">                // 取离黄金分割点的差值</span><br><span class="line">                <span class="built_in">float</span> diff = value - breakPoint;</span><br><span class="line">                // 绝对值</span><br><span class="line">                diff = diff &lt; 0 ? 0 - diff : diff;</span><br><span class="line"> </span><br><span class="line">//                 找出最小的差值</span><br><span class="line">                <span class="keyword">if</span> (diff &lt; minDiff) &#123;</span><br><span class="line">                    minDiff = diff;</span><br><span class="line">                    answerFenzi = fenzi;</span><br><span class="line">                    answerFenmu = fenmu;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        System.out.println(<span class="string">"离黄金分割点("</span> + breakPoint + <span class="string">")最近的两个数相除是:"</span> + answerFenzi + <span class="string">"/"</span> + answerFenmu + <span class="string">"="</span></span><br><span class="line">                + ((<span class="built_in">float</span>) answerFenzi / answerFenmu));</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import java.util.Scanner;</span><br><span class="line">/*计算数的阶乘*/</span><br><span class="line">public class Factorial &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line"> Scanner s = new Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">"请输入一个整数："</span>);</span><br><span class="line">        int n = s.nextInt();</span><br><span class="line">        int fac = 1;</span><br><span class="line">        <span class="keyword">while</span>(n&gt;=1)&#123;</span><br><span class="line">            fac *=n;</span><br><span class="line">            n--;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"阶乘是:"</span> + fac);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">/*水仙花数定义：</span><br><span class="line">1. 一定是3位数</span><br><span class="line">2. 每一位的立方，加起来恰好是这个数本身，比如153=1*1*1+5*5*5+3*3*3</span><br><span class="line"> */</span><br><span class="line">public class Daffodil &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">int daffodil;</span><br><span class="line">System.out.println(<span class="string">"打印所有的水仙花数："</span>);</span><br><span class="line"><span class="keyword">for</span> (int a = 0; a &lt; 10; a++) &#123;</span><br><span class="line"><span class="keyword">for</span> (int b = 0; b &lt; 10; b++) &#123;</span><br><span class="line"><span class="keyword">for</span> (int c = 0; c &lt; 10; c++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a*100+b*10+c == (a*a*a)+(b*b*b)+(c*c*c)&amp;&amp;a*100+b*10+c&gt;99) &#123;</span><br><span class="line">daffodil =a*100+b*10+c;</span><br><span class="line">System.out.println(daffodil);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://how2j.cn/p/5504" target="_blank" rel="noopener">例题来源</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Apr 27 2020 04:30:07 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;控制语句在基础中还是比较重要，还带那么一点有趣&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="https://howsyc.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://howsyc.cn/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>hexo添加rss订阅功能</title>
    <link href="https://howsyc.cn/2020/04/24/hexo%E6%B7%BB%E5%8A%A0rss%E8%AE%A2%E9%98%85%E5%8A%9F%E8%83%BD/"/>
    <id>https://howsyc.cn/2020/04/24/hexo%E6%B7%BB%E5%8A%A0rss%E8%AE%A2%E9%98%85%E5%8A%9F%E8%83%BD/</id>
    <published>2020-04-23T16:55:43.912Z</published>
    <updated>2020-04-23T16:55:44.101Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Apr 27 2020 04:30:07 GMT+0800 (GMT+08:00) --><p>hexo如何添加rss功能呢？</p><a id="more"></a><h3 id="rss包"><a href="#rss包" class="headerlink" title="rss包"></a>rss包</h3><p>在hexojs下有一个hexo-generator-feed的npm包,用来实现订阅功能<br>首先安装这个包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed</span><br></pre></td></tr></table></figure><p>安装成功后在themes的主题配置文件_config.yml下配置该插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">feed:</span><br><span class="line">    type: atom</span><br><span class="line">    path: atom.xml</span><br><span class="line">    limit: 20</span><br><span class="line">    hub:</span><br><span class="line">    content:</span><br><span class="line">    content_limit:</span><br><span class="line">    content_limit_delim: &#39; &#39;</span><br></pre></td></tr></table></figure><p>参数的含义：</p><p>type: RSS的类型(atom/rss2)</p><p>path: 文件路径,默认是atom.xml/rss2.xml</p><p>limit: 展示文章的数量,使用0或则false代表展示全部</p><p>hub:</p><p>content: 在RSS文件中是否包含内容 ,有3个值 true/false默认不填为false</p><p>content_limit: 指定内容的长度作为摘要,仅仅在上面content设置为false和没有自定义的描述出现<br>content_limit_delim: 上面截取描述的分隔符,截取内容是以指定的这个分隔符作为截取结束的标志.在达到规定的内容长度之前最后出现的这个分隔符之前的内容,，防止从中间截断.</p><h5 id="如果是next主题可以实现另一种方法："><a href="#如果是next主题可以实现另一种方法：" class="headerlink" title="如果是next主题可以实现另一种方法："></a>如果是next主题可以实现另一种方法：</h5><p>在主题的config.yml文件下找到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rss:</span><br></pre></td></tr></table></figure><p>直接设置为true就可以了</p><p>配置完成后直接在根目录下运行hexo g<br>就会在你博客的pubilc 文件夹下发现atom.xml文件了</p><p>参考文章：<a href="https://blog.csdn.net/weixin_34292287/article/details/88931060" target="_blank" rel="noopener">https://blog.csdn.net/weixin_34292287/article/details/88931060</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Apr 27 2020 04:30:07 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;hexo如何添加rss功能呢？&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="hexo" scheme="https://howsyc.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo的使用</title>
    <link href="https://howsyc.cn/2020/04/24/hexo-%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://howsyc.cn/2020/04/24/hexo-%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2020-04-23T16:55:43.909Z</published>
    <updated>2020-04-23T16:55:44.096Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Apr 27 2020 04:30:07 GMT+0800 (GMT+08:00) --><p>记录一些我学到hexo命令</p><a id="more"></a><h2 id="Hexo学到的东西"><a href="#Hexo学到的东西" class="headerlink" title="Hexo学到的东西"></a>Hexo学到的东西</h2><h3 id="hexo命令1-本地部署"><a href="#hexo命令1-本地部署" class="headerlink" title="hexo命令1-本地部署"></a>hexo命令1-本地部署</h3><pre><code class="bash">$ hexo init &lt;folder&gt; <span class="comment">#init是初始化一个hexo文件夹</span></code></pre><pre><code class="bash">$ <span class="built_in">cd</span> &lt;folder&gt;  <span class="comment">#注意一定要打开文件夹才能进行部署</span></code></pre><pre><code class="bash">$ npm install    <span class="comment">#部署之前进行安装</span></code></pre><pre><code class="bash">$ hexo g   <span class="comment">#生成静态网页</span></code></pre><pre><code class="bash">$ hexo s      <span class="comment">#启动服务器 启动之后会默认给一个网址进去就是我们部署的网页了</span></code></pre><h3 id="更换hexo主题"><a href="#更换hexo主题" class="headerlink" title="更换hexo主题"></a>更换hexo主题</h3><pre><code class="bash"> 把你想更换的主题放在themes目录下。官网有很多好看的主题：https://hexo.io/themes/ 然后修改站点目录下的_config.yml配置文件找到themes: landscape(默认主题)修改成你在themes下放好的主题，就完成了</code></pre><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Apr 27 2020 04:30:07 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;记录一些我学到hexo命令&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://howsyc.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://howsyc.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>ensp设备调试</title>
    <link href="https://howsyc.cn/2020/04/24/ensp%E8%AE%BE%E5%A4%87%E8%B0%83/"/>
    <id>https://howsyc.cn/2020/04/24/ensp%E8%AE%BE%E5%A4%87%E8%B0%83/</id>
    <published>2020-04-23T16:55:43.900Z</published>
    <updated>2020-04-23T16:55:44.091Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Apr 27 2020 04:30:07 GMT+0800 (GMT+08:00) --><p>本页来自朋友总结：lrb<br>开头符合为什么模式的命令 “-“用户模式 “*”管理员模式 “+X”配置模式 “/“其他模式 没有符合为所有模式<br>p物理端口 v虚拟端口 b虚拟子端口 u用户登录口 s服务器 a客户认证 g组 n互联网网段 e链路聚合<br>指令前加undo为删除或撤销<br>Error：错误 Info：提醒</p><a id="more"></a><h2 id="ensp设备调试"><a href="#ensp设备调试" class="headerlink" title="ensp设备调试"></a>ensp设备调试</h2><h3 id="《管理员用户切换》"><a href="#《管理员用户切换》" class="headerlink" title="《管理员用户切换》"></a>《管理员用户切换》</h3><p>$- sys //进入管理员模式</p><p>$ quit //退后一步 或 Ctrl+Z</p><p>$ return //完全退出</p><h3 id="《设置设备名称》"><a href="#《设置设备名称》" class="headerlink" title="《设置设备名称》"></a>《设置设备名称》</h3><p>$ * sysname &lt;名称&gt; //自定义设备名称</p><p>$ * undo sysname //清除标识名称</p><p>$ * undo info enable //关闭提醒</p><h3 id="《屏幕保护设置》"><a href="#《屏幕保护设置》" class="headerlink" title="《屏幕保护设置》"></a>《屏幕保护设置》</h3><p>+u idle-timeout &lt;时间【”2 30”两分钟30秒 或 “0 0” 无屏幕保护】&gt; //设置屏幕保护时间（默认时间10分钟）</p><p>+u screen-length &lt;行数&gt; //设置显示行数</p><ul><li><p>header login information “信息”//设置登录前信息</p></li><li><p>header shell information “信息”//设置登录后信息</p></li></ul><h3 id="《配置时间》"><a href="#《配置时间》" class="headerlink" title="《配置时间》"></a>《配置时间》</h3><ul><li><p>display clock //查看时间</p></li><li><p>display clock utc //查看国际标准时间</p></li><li><p>clock timezone &lt;时区名称&gt; &lt;add 正偏差/ minus 负偏差&gt; &lt;时间【”08:00:00” 八点整】&gt; //设置时区时间</p></li><li><p>clock datetime &lt;时间【”12:00:00 2019-12-1” 2019年12月1日12点整】&gt; //设置本地时间</p></li></ul><h2 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h2><h3 id="《查看设置设备配置文件》"><a href="#《查看设置设备配置文件》" class="headerlink" title="《查看设置设备配置文件》"></a>《查看设置设备配置文件》</h3><p>display version //查看版本号参数</p><p>display startup //查看启动文件</p><p>display current-configuration //查看当前运行配置文件</p><p>display save-configuration //查看保存配置文件</p><ul><li><p>compare configuration //对比配置文件信息 “is not the same” 不一样</p></li><li><p>save-configuration &lt;文件名&gt; //设置启动文件</p></li><li><p>save //保存设备配置文件 vrpcfg.zip 可以更改文件名和.cfg.zip格式</p></li></ul><h3 id="《目录操作》"><a href="#《目录操作》" class="headerlink" title="《目录操作》"></a>《目录操作》</h3><ul><li><p>dir //查看当前目录文件 flash为根目录</p></li><li><p>pwd //查看当前所在的目录</p></li><li><p>cd &lt;目录【”flash:/src” src从目录】&gt; //打开文件</p></li><li><p>cd .. //返回到上一个文件目录</p></li><li><p>cd / //退出到根目录</p></li><li><p>mkdir &lt;目录名&gt; //创建目录</p></li><li><p>rmdir &lt;目录名&gt; //删除目录</p></li></ul><h3 id="《文件操作》"><a href="#《文件操作》" class="headerlink" title="《文件操作》"></a>《文件操作》</h3><ul><li><p>save &lt;文件名&gt; //存在的保存文件 不存在的创造文件</p></li><li><p>delete &lt;文件名&gt; //删除文件到回收站</p></li><li><p>copy &lt;文件名&gt; &lt;复制为文件名&gt; //复制文件</p></li><li><p>rename &lt;文件名&gt; &lt;命名为文件名&gt; //重命名文件</p></li><li><p>rename &lt;文件名&gt; &lt;目录位置【”flash:/sre” sre目录】&gt; //移动文件</p></li></ul><h3 id="《回收站操作》"><a href="#《回收站操作》" class="headerlink" title="《回收站操作》"></a>《回收站操作》</h3><ul><li><p>dir /all //查看所有文件包括回收站 加[]为回收站文件</p></li><li><p>undelete &lt;文件名&gt; //还原回收站文件</p></li><li><p>reset &lt;文件名&gt; //删除回收站文件</p></li><li><p>delete /unreserved &lt;文件名&gt; //永久删除文件</p></li></ul><h2 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h2><h3 id="《查看配置》"><a href="#《查看配置》" class="headerlink" title="《查看配置》"></a>《查看配置》</h3><ul><li><p>display ssh user-information //查看ssh用户账号信息</p></li><li><p>display ssh server session //查看当前连接ssh用户信息</p></li></ul><h3 id="《进入配置》"><a href="#《进入配置》" class="headerlink" title="《进入配置》"></a>《进入配置》</h3><ul><li><p>user-interface console &lt;数字&gt; //进入本地用户管理</p></li><li><p>user-interface vty &lt;数字【”1”进入1端口 或 “0 4” 进入0到4端口】&gt; //进入远程登录用户管理</p></li></ul><h3 id="《认证设置》"><a href="#《认证设置》" class="headerlink" title="《认证设置》"></a>《认证设置》</h3><p>+u authentication-mode password //设置密码（交换机不能使用此命令修改密码）</p><p>+u set authentication password &lt;cipher 加密/ simple 不加密&gt; &lt;数字&gt; //更改密码后加密</p><p>+u user privilege level &lt;等级&gt; //设置用户等级 最高15级</p><p>+u authentication-mode aaa //调用三A认证权限模式</p><p>+u protocol inbound &lt;all 所有/ssh 加密/telnet 远程&gt; //设置登录模式</p><h4 id="《密码权限配置》"><a href="#《密码权限配置》" class="headerlink" title="《密码权限配置》"></a>《密码权限配置》</h4><ul><li>aaa //进入配置三A认证权限 用户 密码 权限</li></ul><p>+a local-user &lt;用户名&gt; password cipher &lt;密码&gt; //添加用户设置密码</p><p>+a local-user &lt;用户名&gt; privilege level &lt;等级&gt; //设置用户等级 最高15级</p><p>+a local-user &lt;用户名&gt; ftp-directory &lt;目录&gt; //设置用户传输目录</p><p>+a local-user &lt;用户名&gt; server-type &lt;ftp 文件 http 网页/ tel 远程/ ssh 加密/&gt; //设置用户服务类型</p><h4 id="《加密配置》"><a href="#《加密配置》" class="headerlink" title="《加密配置》"></a>《加密配置》</h4><ul><li><p>rsa local-key-pair create //生成密钥 Input the bits设置位数</p></li><li><p>rsa local-key-pair destroy //销毁密钥</p></li><li><p>dis rsa local-key-pair public //查看生成的密钥</p></li></ul><h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><h3 id="《查看配置》-1"><a href="#《查看配置》-1" class="headerlink" title="《查看配置》"></a>《查看配置》</h3><p>display int brief //查看所有端口的简要信息</p><p>+p display this //查看所在的端口信息</p><p>display interface g0/0/1 //查看端口g0/0/1端口信息</p><p>display ip interface brief //查看端口IP地址信息<br>/*down关 up开 *down人为关闭<br>Interface IP_Address/Mask Physical Protocol<br>端口号 IP地址子网掩码 物理连接 信息连接<br>*/</p><p>dis port vlan //查看端口vlan模式划分<br>/*access接入/trunk干道/hybrid混合<br>$ Port Link_Type PVID Trunk_VLAN_List<br>端口号 模式 网段 可通过的vlan<br>*/</p><p>display vlan //查看vlan配置信息 U打开 D关闭</p><p>display ip routing-table //查看路由表<br>/*此网段给谁 状态：Direct直连<br>Destination/Mask Proto Pre Cost Flage NextHop Interface<br>网段 状态 优先级 交给网段 端口号<br>*/</p><p>display ip routing-table protocol static //查看静态路由表</p><p>display stp //查看设备STP生成树协议详细信息<br>/*STP弱/RSTP快/MSTP默认<br>“CIST Bridge” 网桥ID<br>“Designated Bridge/Port” 端口ID<br>“Port Cost(DOtlT)” RPC路径成本<br>*/</p><p>display stp brief //查看stp生成树协议的端口状态<br>/*”ROOT”根端口/“ALTE”阻塞端口/“DEST”指定端口/“BACK”备份端口<br>MSTID Port Role STP_State Protection<br>端口号 模式 状态<br>*/</p><p>display arp all //查看当前连通到的MAC地址表</p><p>display eth-trunk 1 //查看链路聚合1的简要信息<br>/*<br>WorkingMode：模式 NORMAI手工负载分担模式/LACP静态模式<br>Least Active-linknumber：活动链路数量 至少包含一个<br>Max Bandwidth-affected-linknumber：最多包含链路个数<br>Number or Up Port In trunk：现在包含端口个数<br>Operate status：状态 up开/down关<br>Status：端口的状态 Selected激活/Unselect备份<br>Partner：LACP静态模式中相对的另一端口信息<br>*/</p><p>display int eth 1 //查看链路聚合1的详细信息<br>/*<br>PVID：端口VlanID<br>Current BW：当前的带宽<br>Route_Port路由端口/Switch_Port交换端口<br>*/</p><h3 id="《创建进入》"><a href="#《创建进入》" class="headerlink" title="《创建进入》"></a>《创建进入》</h3><ul><li><p>interface GigabitEthernet 0/0/1 //进入配置千兆以太网物理端口</p></li><li><p>interface Ethernet 0/0/1 //进入配置百兆以太网物理端口</p></li><li><p>interface LoopBack 0 //进入配置环回虚拟端口</p></li><li><p>interface GigabitEthernet 0/0/1.&lt;数字&gt; //创建并进入配置虚拟子端口</p></li><li><p>interface Vlanif 0 //创建并进入配置虚拟端口</p></li><li><p>undo interface Vlanif 0 //删除虚拟端口</p></li><li><p>vlan batch 2 to 3 //创建多个vlan虚拟局域网段</p></li><li><p>vlan 2 //创造并进入配置vlan虚拟局域网段</p></li><li><p>undo vlan 2 //删除vlan虚拟局域网段</p></li><li><p>port-group 1 //创建并进入配置组 组可以多个端口统一配置</p></li></ul><p>+g group-member g0/0/0 to g0/0/1 //添加多个物理端口到组里</p><ul><li><p>interface eth-trunk 1 //添加并进入配置链路聚合</p></li><li><p>undo interface eth-trunk 1 //删除链路聚合 删除前要把链路聚合的链路移除</p></li></ul><p>+e trunkport g0/0/0 //添加物理端口到链路聚合里</p><h3 id="《设置端口》"><a href="#《设置端口》" class="headerlink" title="《设置端口》"></a>《设置端口》</h3><p>+p undo negotiation auto //停止端口</p><p>+p speed &lt;”10” 十兆/“100” 百兆/“1000” 千兆&gt; //设置端口速率</p><p>+p duplex &lt;full 全双工/ half 半双工&gt;</p><p>+p ip address &lt;IP地址【192.168.0.1 24 或 192.168.0.1 255.255.255.0】&gt; //添加IP地址</p><p>+p shutdown //关闭端口</p><p>+p undo shutdown //打开端口</p><p>+p port link-type &lt;access 接入/ trunk 中继 /hybrid 默认&gt; //设置端口模式</p><p>+p port default vlan 2 //添加至vlan虚拟局域网段</p><p>+v port trunk allow-pass vlan &lt;ALL /数字&gt; //允许所有vlan虚拟局域网段可通过trunk 可通过trunk的vlan要单独手配置</p><p>+b dotlq termination vid &lt;数字&gt; //绑定vlan到虚拟子端口上 路由器配置</p><p>+n description &lt;名称&gt; //设置vlan虚拟局域网段名称</p><p>+p eth trunk 1 //添加至链路聚合</p><ul><li><p>lacp priority &lt;值&gt; //更改LACP协议端口的优先级 最大61440</p></li><li><p>ip route-static &lt;非直连网段IP&gt; &lt;子网掩码&gt; &lt;直连网段IP/自己端口&gt; //配置静态路由表的非直连网段 “0.0.0.0 0”所有网段</p></li></ul><h3 id="《启关功能》"><a href="#《启关功能》" class="headerlink" title="《启关功能》"></a>《启关功能》</h3><ul><li><p>ftp server enable //启动文件功能</p></li><li><p>stelnet server enable //启动ssh加密功能</p></li></ul><p>+b arp broadcast enable //启动IP广播功能 实现不同网段文件传输</p><ul><li><p>stp enable //启用STP生成树协议</p></li><li><p>stp disable //禁用STP生成树协议</p></li><li><p>stp mode &lt;stp 弱/ rstp 快/ mstp 默认&gt; //更改生成树协议模式</p></li><li><p>stp root &lt;primary 主/ secondary 备份&gt; //设置为根桥</p></li><li><p>stp priority &lt;值&gt; //更改STP的优先级 最大61440</p></li><li><p>stp edged-port enable //设置为边缘端口 不参与生成树协议直接成为指定端口转发状态</p></li></ul><p>+e mode manual load-balance //设置链路聚合模式为手工负载分担</p><p>+e mode lacp-static //设置链路聚合模式为LACP静态模式</p><p>+e max active-linknumber &lt;个数&gt; //设置链路聚合最大支持的链路 可设置激活端口的个数</p><p>+e undo portswitch//禁用交换端口改成路由端口</p><ul><li>lacp priority &lt;值&gt; //更改LACP协议交换机的优先级 最大61440</li></ul><h3 id="《连接端口》"><a href="#《连接端口》" class="headerlink" title="《连接端口》"></a>《连接端口》</h3><p>ping &lt;IP地址&gt; //连通IP地址</p><ul><li><p>telnet &lt;IP地址&gt; //远程登录 输入用户名和密码</p></li><li><p>stelnet &lt;IP地址&gt; //shh加密远程登录 输入用户名和密码</p></li><li><p>ssh client first-time enable //shh用户第一次登录</p></li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>《服务器传输》<br>-* ftp &lt;IP服务器地址&gt; //登录服务器 首次登录设置密码</p><p>*s put &lt;文件名&gt; &lt;保存为&gt; //发送文件到服务器</p><p>《计算机常用指令》<br>ipconfig //查看本地地址信息<br>arp -a //查看当前连通到的MAC地址表<br>ping &lt;IP地址&gt; //连通IP地址</p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>《说明》<br>1.交换机组件同一网段的通信判断MAC，路由器实现不同网段的通信判断IP。<br>指令”ip de”可检查交换机是否为二层交换机 有则是反之不是<br>三层交换机有路由器的功能，但是只能分别使用二层或三层。<br>二层vlan，三层网段；不同的网段有不同的vlan。</p><p>2.服务网关用倒数IP地址，主机客户端用首数IP地址。<br>Internet因特网：通信分区 Ethernet以太网：通信协议<br>Access端口：只能属于1个VLAN，一般用于连接计算机端口；<br>Trunk类型端口：可以允许多个VLAN通过,可以接收和发送多个VLAN 报文,一般用于交换机与交换机相关的接口。<br>Hybrid类型端口：可以允许多个VLAN通过，可以接收和发送多个VLAN 报文，可以用于交换机的间连接也可以用于连接用户计算机。</p><p>3.STP生成树协议工作:任意一交换机中如果到达根网桥有两条或者两条以上的链路.生成树协议都根据算法把其中一条切断,<br>仅保留一条.从而保证任意两个交换机之间只有一条单一的活动链路，来防止网络风暴和MAC地址表震荡。<br>+<br>BID 网桥ID：交换机的唯一身份标识 “优先级+MAC地址” 默认优先级32768<br>PID 端口ID：交换机端口的身份标识 “优先级+端口号”<br>RPC 路径成本：端口到达根桥的线路数和速度 “百兆半双工速率200000”“千兆全双双工速率20000”<br>BPDU：交换机发送生成树协议发送的帧<br>网络风暴：在多条端口中不断的循环查找IP地址<br>MAC地址表震荡：网络风暴中路由器的同一条MAC地址不断切换<br>+<br>原理：1.选根桥：比较网桥ID值选择最小<br>2.选根端口：根桥的端口和与根桥直连的端口都为根端口 比较根路径成本RPC选择最小 如果相同比较上游网桥的网桥ID选择最小 如果相同比较上游端口的端口ID选择最小<br>3.选指定端口：比较根路径成本选择最小 比之间网桥ID选择最小 比较之间端口ID选择最小<br>4.阻塞预备端口：阻塞非指定端口<br>+<br>端口模式：根端口：整个环中所有交换机与根桥相连的和选举出来的 /指定端口：交换机之间选举出来的 /阻塞端口：备份交换机之间的指定端口 //根端口与指定端口功能一样 阻塞端口备份指定端口 备份端口备份根端口<br>端口状态：Disabled没有启用 DIscarding禁用《={Blocking阻塞(接收处理BPDU) Listening侦听(参与生成树计算，接收并发送BPDU)}<br>Learning学习(学习MAC地址表，参与计算生成树，接收并发送BPDU) Forwarding转发(正常转发数据帧，学习MAC地址表，参与计算生成树，接收并发送BPDU)<br>STP切换30秒 RSTP直接切换</p><p>4.LACP链路聚合端口要一至，有两种模式手工负载分担和LACP静态模式，默认手工负载分担模式<br>LACP协议模式可自动划分出一条备份链路<br>更改模式要清除当前链路聚合的端口<br>链路聚合端口号可以不一样<br>路由器使用链路聚合要更改端口类型为路由端口<br>路由器使用三层链路聚合，端口要改为Route_Port路由端口；交换机使用二层链路聚合，端口要改为Switch_Port交换端口<br>单点故障：一个节点坏了，节点之后的整个网络瘫痪</p><p>《方法》<br>1.单臂路由实现：同一个二层交换机下的不同网段之间的通信，利用路由器单个接口虚拟出多个子接口来连接不同网段到路由器上实现通信。</p><p>2.三层交换机实现不同VLAN间通信：二层交换机的物理端口连接不同的vlan网段，然后使用虚拟端口设置网关来连接不同vlan网段，虚拟端口交到三层实现不同网段之间的通信。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Apr 27 2020 04:30:07 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;本页来自朋友总结：lrb&lt;br&gt;开头符合为什么模式的命令 “-“用户模式 “*”管理员模式 “+X”配置模式 “/“其他模式 没有符合为所有模式&lt;br&gt;p物理端口 v虚拟端口 b虚拟子端口 u用户登录口 s服务器 a客户认证 g组 n互联网网段 e链路聚合&lt;br&gt;指令前加undo为删除或撤销&lt;br&gt;Error：错误 Info：提醒&lt;/p&gt;
    
    </summary>
    
    
      <category term="ensp" scheme="https://howsyc.cn/categories/ensp/"/>
    
    
      <category term="ensp" scheme="https://howsyc.cn/tags/ensp/"/>
    
      <category term="网络" scheme="https://howsyc.cn/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
</feed>
